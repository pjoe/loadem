name: pipeline
on: [push, pull_request]

jobs:
  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add clippy
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings
  create_release:
    name: Creating Release (on tag)
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        if: ${{ startsWith(github.ref, 'refs/tags') }}
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false

  build:
    name: Build
    needs: create_release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            compress: tar -czf loadem.tar.gz loadem
            asset_ext: tar.gz
            asset_name: linux-amd64
          - os: windows-latest
            compress: 7z a -tzip loadem.zip loadem.exe
            asset_ext: zip
            asset_name: windows-amd64
          - os: macos-latest
            compress: tar -czf loadem.tar.gz loadem
            asset_ext: tar.gz
            asset_name: darwin-amd64

    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions/cache@v2
        name: Cargo cache
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/cargo@v1
        name: Build
        with:
          command: build
          args: --release
      - name: Compress build
        shell: bash
        run: |
          (cd target/release && ${{matrix.compress}})
      - name: Get tag version
        if: ${{ startsWith(github.ref, 'refs/tags') }}
        id: get_version
        shell: bash
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}
      - name: Upload Release Asset
        if: ${{ startsWith(github.ref, 'refs/tags') }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./target/release/loadem.${{matrix.asset_ext}}
          asset_name: loadem-${{steps.get_version.outputs.VERSION}}-${{matrix.asset_name}}.${{matrix.asset_ext}}
          asset_content_type: application/octet-stream
      - name: Deploy to crates.io
        if: ${{ startsWith(github.ref, 'refs/tags') && runner.os == 'Linux'}}
        uses: actions-rs/cargo@v1
        with:
          command: publish
          args: --token ${{ secrets.CRATES_IO_TOKEN }}
      - name: Deploy to choco
        if: ${{ startsWith(github.ref, 'refs/tags') && runner.os == 'Windows'}}
        env:
          api_key: ${{ secrets.CHOCO_API_KEY}}
        run: |
          cinst au -y
          cd deploy/choco/loadem
          update.ps1